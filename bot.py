from telegram import Update, WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import json

ADMIN_ID = 123456789  # ‚Üê —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π Telegram ID

def load_allowed():
    with open("allowed.json", "r") as f:
        return set(json.load(f))

def save_allowed(allowed):
    with open("allowed.json", "w") as f:
        json.dump(list(allowed), f)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    allowed = load_allowed()

    if user_id not in allowed:
        await update.message.reply_text("‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
        return

    keyboard = [[
        InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å —Ç–∞–±–ª–∏—Ü—É", web_app=WebAppInfo(url="https://gaklaktis.github.io/mafia_moderator/templates/index.html"))  # ‚ö†Ô∏è –£–∫–∞–∂–∏ HTTPS-—Å—Å—ã–ª–∫—É
    ]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=reply_markup)

async def grant(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —ç—Ç–æ –¥–µ–ª–∞—Ç—å.")
        return

    if not context.args:
        await update.message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /grant <user_id>")
        return

    user_id = int(context.args[0])
    allowed = load_allowed()
    allowed.add(user_id)
    save_allowed(allowed)
    await update.message.reply_text(f"‚úÖ –î–æ—Å—Ç—É–ø –≤—ã–¥–∞–Ω –¥–ª—è {user_id}")

async def revoke(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.effective_user.id != ADMIN_ID:
        await update.message.reply_text("‚õî –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω –º–æ–∂–µ—Ç —ç—Ç–æ –¥–µ–ª–∞—Ç—å.")
        return

    if not context.args:
        await update.message.reply_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π: /revoke <user_id>")
        return

    user_id = int(context.args[0])
    allowed = load_allowed()
    allowed.discard(user_id)
    save_allowed(allowed)
    await update.message.reply_text(f"üö´ –î–æ—Å—Ç—É–ø –æ—Ç–æ–∑–≤–∞–Ω —É {user_id}")

app = ApplicationBuilder().token("7398262284:AAE0MPai4JPZC1XkdDI14Mrc68Ke1buYEtY").build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("grant", grant))
app.add_handler(CommandHandler("revoke", revoke))

app.run_polling()
